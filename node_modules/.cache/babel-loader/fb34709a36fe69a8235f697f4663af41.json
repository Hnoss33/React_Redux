{"ast":null,"code":"import axios from 'axios';\nimport { TRAER_POR_USUARIO, CARGANDO, ERROR } from '../types/publicacionesTypes';\nexport const traerPorUsuario = key => async (dispatch, getState) => {\n  const {\n    usuarios\n  } = getState().usuariosReducer;\n  const {\n    publicaciones\n  } = getState().publicacionesReducer;\n  const usuario_id = usuarios[key].id;\n  const publicaciones_actualizadas = [...publicaciones, respuesta.data];\n  const respuesta = await axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${usuario_id}`);\n  dispatch({\n    type: TRAER_POR_USUARIO,\n    payload: publicaciones_actualizadas\n  });\n}; //Creamos un nuevo action creator traerPorUsuario() que recibe por parámetro la key (es el índice del ítem del arreglo)\n//Hacemos que primero llame el actions creator de usuariosTraerTodos() con un await y luego que llame el action de traerPorUsuario(MANDAMOS_KEY) y le mandamos por parámetro la key (es el índice del ítem del arreglo)\n//Este actions creator traerPorUsuario() accede a todos los usuarios con getState(), y del usuario que llego saca el id, realiza la petición trae todas las publicaciones de este usuario y hace el dispatch de tipo TRAER_TODOS\n//Y ya tenemos las publicaciones de ese usuario en especifico","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/blogReact/blog_react/src/actions/publicacionesActions.js"],"names":["axios","TRAER_POR_USUARIO","CARGANDO","ERROR","traerPorUsuario","key","dispatch","getState","usuarios","usuariosReducer","publicaciones","publicacionesReducer","usuario_id","id","publicaciones_actualizadas","respuesta","data","get","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,QAA5B,EAAsCC,KAAtC,QAAmD,6BAAnD;AAGA,OAAO,MAAMC,eAAe,GAAIC,GAAD,IAAS,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAeD,QAAQ,GAAGE,eAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoBH,QAAQ,GAAGI,oBAArC;AACA,QAAMC,UAAU,GAAGJ,QAAQ,CAACH,GAAD,CAAR,CAAcQ,EAAjC;AAEH,QAAMC,0BAA0B,GAAG,CAC5B,GAAGJ,aADyB,EAE5BK,SAAS,CAACC,IAFkB,CAAnC;AAIA,QAAMD,SAAS,GAAG,MAAMf,KAAK,CAACiB,GAAN,CAAW,qDAAoDL,UAAW,EAA1E,CAAxB;AACAN,EAAAA,QAAQ,CAAC;AACRY,IAAAA,IAAI,EAAEjB,iBADE;AAERkB,IAAAA,OAAO,EAAEL;AAFD,GAAD,CAAR;AAIA,CAdM,C,CAgBP;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\nimport { TRAER_POR_USUARIO, CARGANDO, ERROR } from '../types/publicacionesTypes';\n\n\nexport const traerPorUsuario = (key) => async (dispatch, getState) => {\n    const { usuarios } = getState().usuariosReducer;\n    const { publicaciones } = getState().publicacionesReducer;\n    const usuario_id = usuarios[key].id;\n    \n\tconst publicaciones_actualizadas = [\n        ...publicaciones,\n        respuesta.data\n    ]\n\tconst respuesta = await axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${usuario_id}`);\n\tdispatch({\n\t\ttype: TRAER_POR_USUARIO,\n\t\tpayload: publicaciones_actualizadas\n\t});\n};\n\n//Creamos un nuevo action creator traerPorUsuario() que recibe por parámetro la key (es el índice del ítem del arreglo)\n//Hacemos que primero llame el actions creator de usuariosTraerTodos() con un await y luego que llame el action de traerPorUsuario(MANDAMOS_KEY) y le mandamos por parámetro la key (es el índice del ítem del arreglo)\n//Este actions creator traerPorUsuario() accede a todos los usuarios con getState(), y del usuario que llego saca el id, realiza la petición trae todas las publicaciones de este usuario y hace el dispatch de tipo TRAER_TODOS\n//Y ya tenemos las publicaciones de ese usuario en especifico"]},"metadata":{},"sourceType":"module"}
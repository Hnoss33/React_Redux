{"ast":null,"code":"import { TRAER_TODOS, CARGANDO, ERROR } from '../types/usuariosTypes';\nconst INITIAL_STATE = {\n  usuarios: [],\n  cargando: false,\n  //cuando corre o hace render comienza en falso la primera vez en el initialState luego entra en el despatch de cargando, que esta en usuariosAction,linea 6\n  //y cuando cambia el estado, el render vuelve a cambiar osea que es true, y cuando se realiza el dispatch de traer todos \n  //va al reducer y le dice que ya no esta cargando osea que nos vamos a la linea 17 y lo coloca en falso porque no esta cargandi  \n  error: ''\n}; //aca usuarios se conecta al reducer\n//aca el usuariosReducer verifica si tienen el caso Traer usuarios, recordar que venimos de usuariosActions con el Dispatch\n\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TRAER_TODOS:\n      //este es el caso de traer usuarios se llama desde usuariosActions con el Dispatch \n      //abajo en la linea 10 dice : que retorne todo lo que tenia en el estado, pero aparte voy a sobreescribir usuarios del estado que tienen en ese momento con LA INFO del actionCreator me esta entregando.\n      //esto lo entrega con el PAYLOAD que vienen siendo RESPUESTA.DATA EN el archivo usuariosAction, esto se encuentra en el archivo js linea 10\n      return { ...state,\n        usuarios: action.payload,\n        cargando: false // aca lo coloca en falso despues de que el estado cambia en el render vuelve aca para verificar que no esta cargando y se coloca en falso \n\n      };\n    //una ves que este estado cambia el virtual DOM ya sabe donde colocarlo apenas esto cambia, se va al componente linea 35 en render ahi lo coloca.  \n\n    case CARGANDO:\n      return { ...state,\n        cargando: true\n      };\n\n    case ERROR:\n      return { ...state,\n        error: action.payload,\n        cargando: false\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n});","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/blogReact/blog_react/src/reducers/usuariosReducer.js"],"names":["TRAER_TODOS","CARGANDO","ERROR","INITIAL_STATE","usuarios","cargando","error","state","action","type","payload"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,KAAhC,QAA6C,wBAA7C;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,QAAQ,EAAE,KAFQ;AAED;AACjB;AACA;AACAC,EAAAA,KAAK,EAAE;AALW,CAAtB,C,CAOA;AACA;;AACA,gBAAe,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,WAAL;AAAkB;AAClB;AACA;AACI,aAAO,EAAE,GAAGO,KAAL;AACHH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OADd;AAEHL,QAAAA,QAAQ,EAAE,KAFP,CAEa;;AAFb,OAAP;AAGE;;AAEF,SAAKJ,QAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAYF,QAAAA,QAAQ,EAAE;AAAtB,OAAP;;AAEJ,SAAKH,KAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYD,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAA1B;AAAmCL,QAAAA,QAAQ,EAAE;AAA7C,OAAP;;AAEJ;AAAS,aAAOE,KAAP;AAfjB;;AAgBK;AACJ,CAlBL","sourcesContent":["import { TRAER_TODOS, CARGANDO, ERROR } from '../types/usuariosTypes';\nconst INITIAL_STATE = {\n    usuarios: [],\n    cargando: false, //cuando corre o hace render comienza en falso la primera vez en el initialState luego entra en el despatch de cargando, que esta en usuariosAction,linea 6\n    //y cuando cambia el estado, el render vuelve a cambiar osea que es true, y cuando se realiza el dispatch de traer todos \n    //va al reducer y le dice que ya no esta cargando osea que nos vamos a la linea 17 y lo coloca en falso porque no esta cargandi  \n    error: ''\n};\n//aca usuarios se conecta al reducer\n//aca el usuariosReducer verifica si tienen el caso Traer usuarios, recordar que venimos de usuariosActions con el Dispatch\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type)  {\n        case TRAER_TODOS: //este es el caso de traer usuarios se llama desde usuariosActions con el Dispatch \n        //abajo en la linea 10 dice : que retorne todo lo que tenia en el estado, pero aparte voy a sobreescribir usuarios del estado que tienen en ese momento con LA INFO del actionCreator me esta entregando.\n        //esto lo entrega con el PAYLOAD que vienen siendo RESPUESTA.DATA EN el archivo usuariosAction, esto se encuentra en el archivo js linea 10\n            return { ...state, \n                usuarios: action.payload,\n                cargando: false // aca lo coloca en falso despues de que el estado cambia en el render vuelve aca para verificar que no esta cargando y se coloca en falso \n            } //una ves que este estado cambia el virtual DOM ya sabe donde colocarlo apenas esto cambia, se va al componente linea 35 en render ahi lo coloca.  \n    \n            case CARGANDO:\n                return { ...state, cargando: true };\n    \n            case ERROR:\n                return { ...state, error: action.payload, cargando: false };\n    \n            default: return state;\n        };\n    };"]},"metadata":{},"sourceType":"module"}
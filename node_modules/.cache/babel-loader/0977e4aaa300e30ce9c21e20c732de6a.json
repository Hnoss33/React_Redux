{"ast":null,"code":"var _jsxFileName = \"/Users/hydra/Documents/GitHub/blogReact/blog_react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './reducers'; //despues de tener importado e isntalado redux en el proyecto debemos crear el store \n//El store tiene las siguientes responsabilidades:\n// Contiene el estado de la aplicación\n// Permite el acceso al estado vía getState()\n// Permite que el estado sea actualizado vía dispatch(action)\n// Registra los listeners vía subscribe(listener)\n// Maneja la anuliación del registro de los listeners via el retorno de la función de subscribe(listener)\n\nconst store = createStore(reducers, //todos los reducers\n{} //estado inicial\n);\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/blogReact/blog_react/src/index.js"],"names":["React","ReactDOM","App","createStore","Provider","reducers","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGH,WAAW,CACtBE,QADsB,EACZ;AACX,EAFuB,CAEpB;AAFoB,CAAzB;AAKAJ,QAAQ,CAACM,MAAT,eAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './reducers'\n//despues de tener importado e isntalado redux en el proyecto debemos crear el store \n//El store tiene las siguientes responsabilidades:\n\n// Contiene el estado de la aplicación\n// Permite el acceso al estado vía getState()\n// Permite que el estado sea actualizado vía dispatch(action)\n// Registra los listeners vía subscribe(listener)\n// Maneja la anuliación del registro de los listeners via el retorno de la función de subscribe(listener)\n\nconst store = createStore(\n   reducers, //todos los reducers\n  {} //estado inicial\n)\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}
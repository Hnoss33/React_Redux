{"ast":null,"code":"var _jsxFileName = \"/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Publicaciones/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as usuariosActions from '../../actions/usuariosActions';\nimport * as publicacionesActions from '../../actions/publicacionesActions'; //conectamos la informacion de usuarios reducer importando react-redux, conectamos este componente a redux \n\nconst {\n  traerTodos: usuariosTraerTodos\n} = usuariosActions;\nconst {\n  traerPorUsuario: publicacionesTraerPorUsuario\n} = publicacionesActions;\n\nclass Publicaciones extends Component {\n  async componentDidMount() {\n    //esta parte se tradeuce asi : si no existen los usuarios entonces entonces se traen de usuarios action porque si nos vamos a otra pagina ellos deberian estar ahi \n    //osea que cuando regrese a usuarios no voy a necesitar traerlos porque ya existen en el reducer \n    const {\n      usuariosTraerTodos,\n      publicacionesTraerPorUsuario,\n      match: {\n        params: {\n          key\n        }\n      }\n    } = this.props; //!!se saca todo esto del this.props para no colocarlo en los IF el codigo se reduce\n\n    if (!this.props.usuariosReducer.usuarios.length) {\n      //el estado es el suaurioReducer, este se actualiza poreso no lo sacamos y lo colocamos en la constante de arriba, se ejecuta una vez despues del render\n      await usuariosTraerTodos();\n    }\n\n    if (!('publicciones_key' in this.props.usuariosReducer.usuarios[key])) {\n      publicacionesTraerPorUsuario(key);\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"Publicaciones de\"), this.props.match.params.key);\n  }\n\n}\n\nconst mapStateToProps = ({\n  usuariosReducer,\n  publicacionesReducer\n}) => {\n  return {\n    usuariosReducer,\n    publicacionesReducer\n  };\n};\n\nconst mapDispatchToProps = {\n  usuariosTraerTodos,\n  publicacionesTraerPorUsuario\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Publicaciones);","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Publicaciones/index.js"],"names":["React","Component","connect","usuariosActions","publicacionesActions","traerTodos","usuariosTraerTodos","traerPorUsuario","publicacionesTraerPorUsuario","Publicaciones","componentDidMount","match","params","key","props","usuariosReducer","usuarios","length","render","console","log","mapStateToProps","publicacionesReducer","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,eAAZ,MAAiC,+BAAjC;AACA,OAAO,KAAKC,oBAAZ,MAAsC,oCAAtC,C,CACA;;AAEA,MAAM;AAAEC,EAAAA,UAAU,EAAEC;AAAd,IAAqCH,eAA3C;AACA,MAAM;AAAEI,EAAAA,eAAe,EAAEC;AAAnB,IAAoDJ,oBAA1D;;AAEA,MAAMK,aAAN,SAA4BR,SAA5B,CAAsC;AAClC,QAAMS,iBAAN,GAA0B;AAAE;AACxB;AACA,UAAM;AACFJ,MAAAA,kBADE;AAEFE,MAAAA,4BAFE;AAGFG,MAAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAACC,UAAAA;AAAD;AAAT;AAHL,QAIF,KAAKC,KAJT,CAFsB,CAML;;AACjB,QAAI,CAAC,KAAKA,KAAL,CAAWC,eAAX,CAA2BC,QAA3B,CAAoCC,MAAzC,EAAiD;AAAE;AAC9C,YAAMX,kBAAkB,EAAxB;AAEJ;;AACD,QAAI,EAAE,sBAAsB,KAAKQ,KAAL,CAAWC,eAAX,CAA2BC,QAA3B,CAAoCH,GAApC,CAAxB,CAAJ,EAAuE;AACnEL,MAAAA,4BAA4B,CAACK,GAAD,CAA5B;AACH;AACJ;;AACDK,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAIC,KAAKA,KAAL,CAAWH,KAAX,CAAiBC,MAAjB,CAAwBC,GAJzB,CADJ;AAQH;;AA3BiC;;AA8BtC,MAAMQ,eAAe,GAAG,CAAC;AAAEN,EAAAA,eAAF;AAAmBO,EAAAA;AAAnB,CAAD,KAA+C;AACtE,SAAO;AAAEP,IAAAA,eAAF;AAAmBO,IAAAA;AAAnB,GAAP;AACA,CAFD;;AAIA,MAAMC,kBAAkB,GAAG;AAC1BjB,EAAAA,kBAD0B;AAE1BE,EAAAA;AAF0B,CAA3B;AAKA,eAAeN,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport * as usuariosActions from '../../actions/usuariosActions';\nimport * as publicacionesActions from '../../actions/publicacionesActions';\n//conectamos la informacion de usuarios reducer importando react-redux, conectamos este componente a redux \n\nconst { traerTodos: usuariosTraerTodos } = usuariosActions;\nconst { traerPorUsuario: publicacionesTraerPorUsuario } = publicacionesActions;\n\nclass Publicaciones extends Component {\n    async componentDidMount() { //esta parte se tradeuce asi : si no existen los usuarios entonces entonces se traen de usuarios action porque si nos vamos a otra pagina ellos deberian estar ahi \n        //osea que cuando regrese a usuarios no voy a necesitar traerlos porque ya existen en el reducer \n        const {\n            usuariosTraerTodos,\n            publicacionesTraerPorUsuario,\n            match: {params: {key}}\n        } = this.props;  //!!se saca todo esto del this.props para no colocarlo en los IF el codigo se reduce\n        if (!this.props.usuariosReducer.usuarios.length) { //el estado es el suaurioReducer, este se actualiza poreso no lo sacamos y lo colocamos en la constante de arriba, se ejecuta una vez despues del render\n             await usuariosTraerTodos();\n\n        }\n        if (!('publicciones_key' in this.props.usuariosReducer.usuarios[key])) {\n            publicacionesTraerPorUsuario(key);\n        }\n    }\n    render() {\n        console.log(this.props);\n        \n        return (\n            <div>\n            <h1>\n            Publicaciones de\n            </h1>\n            {this.props.match.params.key}  \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ usuariosReducer, publicacionesReducer }) => {\n\treturn { usuariosReducer, publicacionesReducer };\n};\n\nconst mapDispatchToProps = {\n\tusuariosTraerTodos,\n\tpublicacionesTraerPorUsuario\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Publicaciones);"]},"metadata":{},"sourceType":"module"}
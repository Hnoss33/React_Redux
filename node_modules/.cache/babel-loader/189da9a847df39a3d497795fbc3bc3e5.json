{"ast":null,"code":"var _jsxFileName = \"/Users/hydra/Documents/GitHub/React_Redux/src/components/Usuarios/Tabla.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Tabla = props => {\n  // este es un arreglo vacio el cual los usuarios se van a mostrar con los TR que se envian desde la linea 50 a esta \n  //En Usuarios No hay nada, es un Arreglo VACIO, asi lo define el reducer\n  // el componente aca empieza a llamar el ACTIONCREATOR, esto se realiza desde el DIDMOUNT\n  const ponerFilas = () => props.usuarios.map((usuario, key) =>\n  /*#__PURE__*/\n  //en el imndex.js de usuarios debemos colocar <Tabla usuarios={this.props.usuarios}/> porque de los props voy a sacar los usuarios no hemos mandado los usuarios por parametro \n  // mirar como llamamos los usuarios en la linea 26 de index.js de esta forma es sin el reducer, con el reducer abajo en la linea 48 se realiza con el reducer\n  React.createElement(\"tr\", {\n    key: usuario.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, usuario.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, usuario.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, usuario.website), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/publicaciones/${key}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"eye-solid2 icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }))))); //todo lo de ponerFilas se cambia todo esto sucede cuando el payload: respuesta.data se actualiza con la nueva info y la trae de nmuevo\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Nombre\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Correo\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Enlace\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, ponerFilas())));\n};\n\nconst mapStateToProps = reducers => {\n  //de esta manera llamamos los usuarios con el reducer\n  return reducers.usuariosReducer;\n};\n\nexport default connect(mapStateToProps)(Tabla);","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/React_Redux/src/components/Usuarios/Tabla.js"],"names":["React","connect","Link","Tabla","props","ponerFilas","usuarios","map","usuario","key","id","name","email","website","mapStateToProps","reducers","usuariosReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB;AACJ;AACA;AACA,QAAMC,UAAU,GAAG,MAAMD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAAUC,GAAV;AAAA;AAAoB;AAC5D;AACI;AAAI,IAAA,GAAG,EAAGD,OAAO,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,OAAO,CAACG,IADV,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,OAAO,CAACI,KADV,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,OAAO,CAACK,OADV,CAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,kBAAiBJ,GAAI,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADH,CAVJ,CAFiB,CAAzB,CAJyB,CAuBvB;;;AAGE,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADA,CADJ,eAcQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFJ,UAAU,EADR,CAdR,CADA,CADJ;AAuBH,CAjDD;;AAkDA,MAAMS,eAAe,GAAIC,QAAD,IAAc;AAAG;AACzC,SAAOA,QAAQ,CAACC,eAAhB;AACC,CAFD;;AAGA,eAAef,OAAO,CAACa,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom'\nconst Tabla = (props) => {\n    // este es un arreglo vacio el cual los usuarios se van a mostrar con los TR que se envian desde la linea 50 a esta \n//En Usuarios No hay nada, es un Arreglo VACIO, asi lo define el reducer\n// el componente aca empieza a llamar el ACTIONCREATOR, esto se realiza desde el DIDMOUNT\nconst ponerFilas = () => props.usuarios.map((usuario, key) => ( //en el imndex.js de usuarios debemos colocar <Tabla usuarios={this.props.usuarios}/> porque de los props voy a sacar los usuarios no hemos mandado los usuarios por parametro \n    // mirar como llamamos los usuarios en la linea 26 de index.js de esta forma es sin el reducer, con el reducer abajo en la linea 48 se realiza con el reducer\n        <tr key={ usuario.id }>\n            <td>\n            { usuario.name }\n            </td>\n            <td>\n            { usuario.email }\n            </td>\n            <td>\n            { usuario.website }\n            </td>\n            <td>\n               <Link to={`/publicaciones/${key}`}>\n               <div className=\"eye-solid2 icon\"></div>\n                </Link>\n            </td>\n        </tr>\n  ));\n  //todo lo de ponerFilas se cambia todo esto sucede cuando el payload: respuesta.data se actualiza con la nueva info y la trae de nmuevo\n  \n  \n    return (\n        <div>\n        <table className=\"tabla\">\n            <thead>\n            <tr>\n                <th>\n                Nombre\n                </th>\n                <th>\n                Correo\n                </th>\n                <th>\n                Enlace\n                </th>\n                </tr>\n                </thead>\n                <tbody> \n            { ponerFilas() } \n            {/* lo que hace este this.ponerFilas es que por cada usuario entrega una fila o un TR, mirar la linea 14 */}\n            </tbody>\n        </table>\n        </div>\n    )\n}\nconst mapStateToProps = (reducers) => {  //de esta manera llamamos los usuarios con el reducer\nreturn reducers.usuariosReducer;\n}\nexport default connect(mapStateToProps)(Tabla);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Publicaciones/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../general/Spinner';\nimport Fatal from '../general/Fatal';\nimport Comentarios from './Comentarios';\nimport * as usuariosActions from '../../actions/usuariosActions';\nimport * as publicacionesActions from '../../actions/publicacionesActions'; //conectamos la informacion de usuarios reducer importando react-redux, conectamos este componente a redux \n\nconst {\n  traerTodos: usuariosTraerTodos\n} = usuariosActions;\nconst {\n  traerPorUsuario: publicacionesTraerPorUsuario,\n  abrirCerrar,\n  traerComentarios\n} = publicacionesActions;\n\nclass Publicaciones extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.ponerUsuario = () => {\n      const {\n        match: {\n          params: {\n            key\n          }\n        },\n        usuariosReducer\n      } = this.props;\n\n      if (usuariosReducer.error) {\n        return /*#__PURE__*/React.createElement(Fatal, {\n          mensaje: usuariosReducer.error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        });\n      }\n\n      if (!usuariosReducer.usuarios.length || usuariosReducer.cargando) {\n        return /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        });\n      }\n\n      const nombre = usuariosReducer.usuarios[key].name;\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 4\n        }\n      }, \"Publicaciones de \", nombre);\n    };\n\n    this.ponerPublicaciones = () => {\n      const {\n        usuariosReducer,\n        usuariosReducer: {\n          usuarios\n        },\n        publicacionesReducer,\n        publicacionesReducer: {\n          publicaciones\n        },\n        match: {\n          params: {\n            key\n          }\n        }\n      } = this.props;\n      if (!usuarios.length) return;\n      if (usuariosReducer.error) return;\n\n      if (publicacionesReducer.cargando) {\n        return /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }\n        });\n      }\n\n      if (publicacionesReducer.error) {\n        return /*#__PURE__*/React.createElement(Fatal, {\n          mensaje: publicacionesReducer.error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        });\n      }\n\n      if (!publicaciones.length) return;\n      if (!('publicaciones_key' in usuarios[key])) return;\n      const {\n        publicaciones_key\n      } = usuarios[key];\n      return this.mostrarInfo(publicaciones[publicaciones_key], publicaciones_key);\n    };\n\n    this.mostrarInfo = (publicaciones, pub_key) => publicaciones.map((publicacion, com_key) => /*#__PURE__*/React.createElement(\"div\", {\n      key: publicacion.id,\n      className: \"pub_titulo\",\n      onClick: () => this.mostrarComentarios(pub_key, com_key, publicacion.comentarios),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }, publicacion.title), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, publicacion.body), publicacion.abierto ? /*#__PURE__*/React.createElement(Comentarios, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 31\n      }\n    }) : ''));\n\n    this.mostrarComentarios = (pub_key, com_key, comentarios) => {\n      console.log('comentarios: ', comentarios);\n      this.props.abrirCerrar(pub_key, com_key);\n\n      if (!comentarios.length) {\n        this.props.traerComentarios(pub_key, com_key);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    //esta parte se tradeuce asi : si no existen los usuarios entonces entonces se traen de usuarios action porque si nos vamos a otra pagina ellos deberian estar ahi \n    //osea que cuando regrese a usuarios no voy a necesitar traerlos porque ya existen en el reducer \n    const {\n      usuariosTraerTodos,\n      publicacionesTraerPorUsuario,\n      match: {\n        params: {\n          key\n        }\n      }\n    } = this.props; //!!se saca todo esto del this.props para no colocarlo en los IF el codigo se reduce\n\n    if (!this.props.usuariosReducer.usuarios.length) {\n      //el estado es el suaurioReducer, este se actualiza poreso no lo sacamos y lo colocamos en la constante de arriba, se ejecuta una vez despues del render\n      await usuariosTraerTodos();\n    }\n\n    if (this.props.usuariosReducer.error) {\n      return;\n    }\n\n    if (!('publicaciones_key' in this.props.usuariosReducer.usuarios[key])) {\n      await publicacionesTraerPorUsuario(key);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 4\n      }\n    }, this.ponerUsuario(), this.ponerPublicaciones());\n  }\n\n}\n\nconst mapStateToProps = ({\n  usuariosReducer,\n  publicacionesReducer\n}) => {\n  return {\n    usuariosReducer,\n    publicacionesReducer\n  };\n};\n\nconst mapDispatchToProps = {\n  usuariosTraerTodos,\n  publicacionesTraerPorUsuario,\n  abrirCerrar,\n  traerComentarios\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Publicaciones);","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Publicaciones/index.js"],"names":["React","Component","connect","Spinner","Fatal","Comentarios","usuariosActions","publicacionesActions","traerTodos","usuariosTraerTodos","traerPorUsuario","publicacionesTraerPorUsuario","abrirCerrar","traerComentarios","Publicaciones","ponerUsuario","match","params","key","usuariosReducer","props","error","usuarios","length","cargando","nombre","name","ponerPublicaciones","publicacionesReducer","publicaciones","publicaciones_key","mostrarInfo","pub_key","map","publicacion","com_key","id","mostrarComentarios","comentarios","title","body","abierto","console","log","componentDidMount","render","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../general/Spinner';\nimport Fatal from '../general/Fatal';\nimport Comentarios from './Comentarios';\n\nimport * as usuariosActions from '../../actions/usuariosActions';\nimport * as publicacionesActions from '../../actions/publicacionesActions';\n//conectamos la informacion de usuarios reducer importando react-redux, conectamos este componente a redux \n\nconst { traerTodos: usuariosTraerTodos } = usuariosActions;\nconst { traerPorUsuario: publicacionesTraerPorUsuario, \n     abrirCerrar, \n     traerComentarios\n     } = publicacionesActions;\n\nclass Publicaciones extends Component {\n    async componentDidMount() { //esta parte se tradeuce asi : si no existen los usuarios entonces entonces se traen de usuarios action porque si nos vamos a otra pagina ellos deberian estar ahi \n        //osea que cuando regrese a usuarios no voy a necesitar traerlos porque ya existen en el reducer \n        const {\n            usuariosTraerTodos,\n            publicacionesTraerPorUsuario,\n            match: {params: {key}}\n        } = this.props;  //!!se saca todo esto del this.props para no colocarlo en los IF el codigo se reduce\n        if (!this.props.usuariosReducer.usuarios.length) { //el estado es el suaurioReducer, este se actualiza poreso no lo sacamos y lo colocamos en la constante de arriba, se ejecuta una vez despues del render\n             await usuariosTraerTodos();\n\n        }\n        if (this.props.usuariosReducer.error) {\n\t\t\treturn;\n\t\t}\n\t\tif (!('publicaciones_key' in this.props.usuariosReducer.usuarios[key])) {\n\t\t\tawait publicacionesTraerPorUsuario(key);\n\t\t}\n    }\n    \n    ponerUsuario = () => {\n\t\tconst {\n\t\t\tmatch: { params: { key } },\n\t\t\tusuariosReducer\n\t\t} = this.props;\n\n\t\tif (usuariosReducer.error) {\n\t\t\treturn <Fatal mensaje={ usuariosReducer.error } />;\n\t\t}\n\t\tif (!usuariosReducer.usuarios.length || usuariosReducer.cargando) {\n\t\t\treturn <Spinner />\n\t\t}\n\n\t\tconst nombre = usuariosReducer.usuarios[key].name;\n\n\t\treturn (\n\t\t\t<h1>\n\t\t\t\tPublicaciones de { nombre }\n\t\t\t</h1>\n\t\t);\n\t};\n    //Conclusión: Creamos una función llamada ponerPublicaciones() \n    //que valida los estados de publicaciones (error y cargando)\n    // y si todo sale bien ya tengo las publicaciones y de ese usuario \n    // destructuro publicaciones key (donde están las publicaciones de este usuario)\n    //y retorno todas las publicaciones que están en esa casilla del arreglo con un .map\n    //tanto lió para mostrar las publicaciones de un usuario pero igual excelente clase…\n    ponerPublicaciones = () => {\n\t\tconst {\n\t\t\tusuariosReducer,\n\t\t\tusuariosReducer: { usuarios },\n\t\t\tpublicacionesReducer,\n\t\t\tpublicacionesReducer: { publicaciones },\n\t\t\tmatch: { params: { key } }\n\t\t} = this.props;\n\n\t\tif (!usuarios.length) return;\n\t\tif (usuariosReducer.error) return;\n\t\tif (publicacionesReducer.cargando) {\n\t\t\treturn <Spinner />;\n\t\t}\n\t\tif (publicacionesReducer.error) {\n\t\t\treturn <Fatal mensaje={ publicacionesReducer.error } />\n\t\t}\n\t\tif (!publicaciones.length) return;\n\t\tif (!('publicaciones_key' in usuarios[key])) return;\n\n\t\tconst { publicaciones_key } = usuarios[key];\n\t\treturn this.mostrarInfo(\n\t\t\tpublicaciones[publicaciones_key],\n\t\t\tpublicaciones_key\n\t\t);\n\t};\n\n\tmostrarInfo = (publicaciones, pub_key) => (\n\t\tpublicaciones.map((publicacion, com_key) => (\n\t\t\t<div\n\t\t\t\tkey={publicacion.id}\n\t\t\t\tclassName='pub_titulo'\n\t\t\t\tonClick={\n\t\t\t\t\t() => this.mostrarComentarios(pub_key, com_key, publicacion.comentarios)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<h2>\n\t\t\t\t\t{ publicacion.title }\n\t\t\t\t</h2>\n\t\t\t\t<h3>\n\t\t\t\t\t{ publicacion.body }\n\t\t\t\t</h3>\n\t\t\t\t{ (publicacion.abierto) ? <Comentarios /> : '' }\n\t\t\t</div>\n\t\t))\n\t);\n\n\tmostrarComentarios = (pub_key, com_key, comentarios) => {\n\t\tconsole.log('comentarios: ', comentarios);\n\t\tthis.props.abrirCerrar(pub_key, com_key)\n\t\tif (!comentarios.length) {\n\t\t\tthis.props.traerComentarios(pub_key, com_key)\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{ this.ponerUsuario() }\n\t\t\t\t{ this.ponerPublicaciones() }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ usuariosReducer, publicacionesReducer }) => {\n\treturn { usuariosReducer, publicacionesReducer };\n};\n\nconst mapDispatchToProps = {\n\tusuariosTraerTodos,\n\tpublicacionesTraerPorUsuario,\n\tabrirCerrar,\n\ttraerComentarios\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Publicaciones);"]},"metadata":{},"sourceType":"module"}
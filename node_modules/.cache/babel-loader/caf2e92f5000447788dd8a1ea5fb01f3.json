{"ast":null,"code":"var _jsxFileName = \"/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Publicaciones/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as usuariosActions from '../../actions/usuariosActions';\nimport * as publicacionesActions from '../../actions/publicacionesActions'; //conectamos la informacion de usuarios reducer importando react-redux, conectamos este componente a redux \n\nclass Publicaciones extends Component {\n  componentDidMount() {\n    //esta parte se tradeuce asi : si no existen los usuarios entonces entonces se traen de usuarios action porque si nos vamos a otra pagina ellos deberian estar ahi \n    //osea que cuando regrese a usuarios no voy a necesitar traerlos porque ya existen en el reducer \n    if (!this.props.usuariosReducer.usuarios.length) {\n      this.props.traerTodos();\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, \"Publicaciones de\"), this.props.match.params.key);\n  }\n\n}\n\nconst mapStateToProps = ({\n  usuariosReducer,\n  publicacionesReducer\n}) => {\n  return {\n    usuariosReducer,\n    publicacionesReducer\n  };\n};\n\nconst mapDispatchToProps = { ...usuariosActions,\n  ...publicacionesActions\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Publicaciones);","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Publicaciones/index.js"],"names":["React","Component","connect","usuariosActions","publicacionesActions","Publicaciones","componentDidMount","props","usuariosReducer","usuarios","length","traerTodos","render","console","log","match","params","key","mapStateToProps","publicacionesReducer","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,eAAZ,MAAiC,+BAAjC;AACA,OAAO,KAAKC,oBAAZ,MAAsC,oCAAtC,C,CACA;;AACA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAClCK,EAAAA,iBAAiB,GAAE;AAAE;AACjB;AACA,QAAI,CAAC,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,QAA3B,CAAoCC,MAAzC,EAAiD;AACzD,WAAKH,KAAL,CAAWI,UAAX;AAES;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAIC,KAAKA,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwBC,GAJzB,CADJ;AAQH;;AAnBiC;;AAsBtC,MAAMC,eAAe,GAAG,CAAC;AAACV,EAAAA,eAAD;AAAiBW,EAAAA;AAAjB,CAAD,KAA4C;AACjE,SAAO;AACHX,IAAAA,eADG;AAEHW,IAAAA;AAFG,GAAP;AAKF,CAND;;AAOA,MAAMC,kBAAkB,GAAE,EACtB,GAAGjB,eADmB;AAEtB,KAAGC;AAFmB,CAA1B;AAIA,eAAeF,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport * as usuariosActions from '../../actions/usuariosActions';\nimport * as publicacionesActions from '../../actions/publicacionesActions';\n//conectamos la informacion de usuarios reducer importando react-redux, conectamos este componente a redux \nclass Publicaciones extends Component {\n    componentDidMount(){ //esta parte se tradeuce asi : si no existen los usuarios entonces entonces se traen de usuarios action porque si nos vamos a otra pagina ellos deberian estar ahi \n        //osea que cuando regrese a usuarios no voy a necesitar traerlos porque ya existen en el reducer \n        if (!this.props.usuariosReducer.usuarios.length) {\nthis.props.traerTodos();\n\n        }\n    }\n    render() {\n        console.log(this.props);\n        \n        return (\n            <div>\n            <h1>\n            Publicaciones de\n            </h1>\n            {this.props.match.params.key}  \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({usuariosReducer,publicacionesReducer}) => {\n   return {\n       usuariosReducer,\n       publicacionesReducer\n   }\n\n}\nconst mapDispatchToProps ={\n    ...usuariosActions,\n    ...publicacionesActions\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Publicaciones);\n"]},"metadata":{},"sourceType":"module"}
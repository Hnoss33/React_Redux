{"ast":null,"code":"var _jsxFileName = \"/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Usuarios/index.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux'; // import reducers from '../../reducers';\n\nclass Usuarios extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.ponerFilas = () => this.state.usuarios.map(usuario => /*#__PURE__*/React.createElement(\"tr\", {\n      key: usuario.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, usuario.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, usuario.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, usuario.website)));\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"tabla\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, \"Nombre\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, \"Correo\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, \"Enlace\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, this.ponerFilas())));\n  }\n\n}\n\nconst mapStateToProps = reducers => {\n  //le podemos entregar al componente el reducer que se requiera, en este caso solo los usuarios\n  return reducers.usuariosReducer;\n};\n\nexport default connect(mapStateToProps, {\n  /*actions*/\n})(Usuarios); // el primer parametro que el conect debe de recibir, es todos los reducers que el proveedor le va a entrar al usuario, se los entregamos al componente para que los pueda utilizar","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Usuarios/index.js"],"names":["React","Component","axios","connect","Usuarios","ponerFilas","state","usuarios","map","usuario","id","name","email","website","render","console","log","props","mapStateToProps","reducers","usuariosReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAcjCI,UAdiC,GAcpB,MACT,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAyBC,OAAD,iBAC5B;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCD,OAAO,CAACE,IADT,CADJ,eAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCF,OAAO,CAACG,KADT,CAJN,eAOM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCH,OAAO,CAACI,OADT,CAPN,CADI,CAf6B;AAAA;;AAgC3BC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKZ,UAAL,EADJ,CAdF,CADF,CADF;AAsBD;;AAzD0B;;AA4DjC,MAAMa,eAAe,GAAIC,QAAD,IAAc;AAAE;AACxC,SAAOA,QAAQ,CAACC,eAAhB;AACC,CAFD;;AAGA,eAAejB,OAAO,CAACe,eAAD,EAAkB;AAAC;AAAD,CAAlB,CAAP,CAAwCd,QAAxC,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n// import reducers from '../../reducers';\n\nclass Usuarios extends Component { //este es un componente funcional ya que empieza con const, el componente no funcional no manejan estados, solo manejan informacion \n// constructor() {  //no mnecesitamos el contructor porque ya estamos llamando con el reducer\n//   super();\n//   this.state = {\n//     usuarios: []\n//   }\n// }\n// async componentDidMount () { //en este didmount estamos cambiando el estado estamos cargando el arreglo de dos objetos.\n//   const respuesta = await axios.get('https://jsonplaceholder.typicode.com/users');\n//   this.setState({\n//     usuarios: respuesta.data\n//   })\n// }\n\nponerFilas = () => (\n    this.state.usuarios.map((usuario) => (\n<tr key={usuario.id}>\n    <td>\n    {usuario.name}\n        </td>\n      <td>\n      {usuario.email}\n        </td>\n      <td>\n      {usuario.website}\n      </td>\n</tr>\n    ))\n  );\n\n\n\n      render() {\n        console.log(this.props);\n        \n        return (\n          <div >\n            <table className=\"tabla\">\n              <thead>\n                <tr>\n                  <th>\n                    Nombre\n                  </th>\n                  <th>\n                    Correo\n                  </th>\n                  <th>\n                    Enlace\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                { this.ponerFilas() }\n              </tbody>\n            </table>\n          </div>\n        )\n      }\n}\n\nconst mapStateToProps = (reducers) => { //le podemos entregar al componente el reducer que se requiera, en este caso solo los usuarios\nreturn reducers.usuariosReducer;\n}\nexport default connect(mapStateToProps, {/*actions*/})(Usuarios);\n// el primer parametro que el conect debe de recibir, es todos los reducers que el proveedor le va a entrar al usuario, se los entregamos al componente para que los pueda utilizar \n\n"]},"metadata":{},"sourceType":"module"}
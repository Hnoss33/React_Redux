{"ast":null,"code":"var _jsxFileName = \"/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Usuarios/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as usuariosActions from '../../actions/usuariosActions';\nimport Spinner from '..//general/Spinner';\nimport Fatal from '../general/Fatal';\nimport Tabla from './Tabla'; //AL CREAR ESTE COMPONENTE NOS MOVEMOS A LA LINEA : 50 : en el Render\n//esta es la clase usuario donde comienza todo. este es un componente clase\n\nclass Usuarios extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.ponerContenido = () => {\n      if (this.props.cargando) {\n        return /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }\n        });\n      }\n\n      if (this.props.error) {\n        return /*#__PURE__*/React.createElement(Fatal, {\n          mensaje: this.props.error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Tabla, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }); //esta tabla se trate con el connect de react redux \n    };\n  }\n\n  //este es un componente funcional ya que empieza con const, el componente no funcional no manejan estados, solo manejan informacion \n  //en este componente didmount no llamamos los usuarios, en vez de eso estamos llamando el action creator!! y el action creator! esta yendo a la URL y trayendo los usuarios y entregarselos al REDUCER!!\n  componentDidMount() {\n    //en este didmount estamos cambiando el estado estamos cargando el arreglo de dos objetos.\n    //ESTE ES EL ACTION CREATOR QUE VA A TRAER TODO, sabemos que es un action reator porque en la linea 66 lo estoy conectando con mi usuarios action\n    //se manda a llamar todos de usuarios action {EL TRAER TODOS O VAMOS A ENCONTRAR EN EL ARCHIVO USUARIOSACTION.JS de la carpeta actions}\n    this.props.traerTodos();\n  }\n\n  render() {\n    // console.log(this.props.cargando); //aca en este concole log miramos como esta la distribucion de los objetos y componentes del prop \n    // console.log(this.props.cargando);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, this.ponerContenido());\n  }\n\n}\n\nconst mapStateToProps = reducers => {\n  //le podemos entregar al componente el reducer que se requiera, en este caso solo los usuarios\n  return reducers.usuariosReducer;\n};\n\nexport default connect(mapStateToProps, usuariosActions)(Usuarios); // el primer parametro que el conect debe de recibir, es todos los reducers que el proveedor le va a entrar al usuario, se los entregamos al componente para que los pueda utilizar","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Usuarios/index.js"],"names":["React","Component","connect","usuariosActions","Spinner","Fatal","Tabla","Usuarios","ponerContenido","props","cargando","error","componentDidMount","traerTodos","render","mapStateToProps","reducers","usuariosReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,eAAZ,MAAiC,+BAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAGA;AACA;;AACA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAQhCO,cARgC,GAQf,MAAM;AACrB,UAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AACvB,4BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,UAAI,KAAKD,KAAL,CAAWE,KAAf,EAAsB;AACpB,4BAAO,oBAAC,KAAD;AAAO,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,0BAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CAPqB,CAOJ;AAClB,KAhB+B;AAAA;;AAAE;AACnC;AAEAC,EAAAA,iBAAiB,GAAI;AAAE;AACrB;AACA;AACA,SAAKH,KAAL,CAAWI,UAAX;AACD;;AAWKC,EAAAA,MAAM,GAAG;AACP;AACA;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,cAAL,EADH,CADF;AAKD;;AA3B0B;;AA8BjC,MAAMO,eAAe,GAAIC,QAAD,IAAc;AAAE;AACxC,SAAOA,QAAQ,CAACC,eAAhB;AACC,CAFD;;AAGA,eAAef,OAAO,CAACa,eAAD,EAAkBZ,eAAlB,CAAP,CAA0CI,QAA1C,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as usuariosActions from '../../actions/usuariosActions';\nimport Spinner from '..//general/Spinner';\nimport Fatal from '../general/Fatal';\nimport Tabla from './Tabla'\n\n\n//AL CREAR ESTE COMPONENTE NOS MOVEMOS A LA LINEA : 50 : en el Render\n//esta es la clase usuario donde comienza todo. este es un componente clase\nclass Usuarios extends Component { //este es un componente funcional ya que empieza con const, el componente no funcional no manejan estados, solo manejan informacion \n//en este componente didmount no llamamos los usuarios, en vez de eso estamos llamando el action creator!! y el action creator! esta yendo a la URL y trayendo los usuarios y entregarselos al REDUCER!!\n\ncomponentDidMount () { //en este didmount estamos cambiando el estado estamos cargando el arreglo de dos objetos.\n  //ESTE ES EL ACTION CREATOR QUE VA A TRAER TODO, sabemos que es un action reator porque en la linea 66 lo estoy conectando con mi usuarios action\n  //se manda a llamar todos de usuarios action {EL TRAER TODOS O VAMOS A ENCONTRAR EN EL ARCHIVO USUARIOSACTION.JS de la carpeta actions}\n  this.props.traerTodos();\n}\n ponerContenido = () => { \n   if (this.props.cargando) {\n     return <Spinner/>;\n   }\n   if (this.props.error) {\n     return <Fatal mensaje={this.props.error}/>;\n   }\n   return <Tabla/>; //esta tabla se trate con el connect de react redux \n } \n\n      render() {\n        // console.log(this.props.cargando); //aca en este concole log miramos como esta la distribucion de los objetos y componentes del prop \n        // console.log(this.props.cargando);\n      \n        return (\n          <div >\n            {this.ponerContenido()} \n          </div>\n        )\n      }\n}\n\nconst mapStateToProps = (reducers) => { //le podemos entregar al componente el reducer que se requiera, en este caso solo los usuarios\nreturn reducers.usuariosReducer;\n}\nexport default connect(mapStateToProps, usuariosActions)(Usuarios);\n// el primer parametro que el conect debe de recibir, es todos los reducers que el proveedor le va a entrar al usuario, se los entregamos al componente para que los pueda utilizar \n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Usuarios/Tabla.js\";\nimport React from 'react';\n\nconst Tabla = props => {\n  // este es un arreglo vacio el cual los usuarios se van a mostrar con los TR que se envian desde la linea 50 a esta \n  //En Usuarios No hay nada, es un Arreglo VACIO, asi lo define el reducer\n  // el componente aca empieza a llamar el ACTIONCREATOR, esto se realiza desde el DIDMOUNT\n  ponerFilas = () => this.props.usuarios.map(usuario => /*#__PURE__*/React.createElement(\"tr\", {\n    key: usuario.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, usuario.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, usuario.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, usuario.website))); //todo lo de ponerFilas se cambia todo esto sucede cuando el payload: respuesta.data se actualiza con la nueva info y la trae de nmuevo\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Nombre\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Correo\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Enlace\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, this.ponerFilas())));\n};\n\nexport default Tabla;","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/blogReact/blog_react/src/components/Usuarios/Tabla.js"],"names":["React","Tabla","props","ponerFilas","usuarios","map","usuario","id","name","email","website"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB;AACJ;AACA;AACAC,EAAAA,UAAU,GAAG,MAAM,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,GAApB,CAAyBC,OAAD,iBACvC;AAAI,IAAA,GAAG,EAAGA,OAAO,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,OAAO,CAACE,IADZ,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,OAAO,CAACG,KADZ,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,OAAO,CAACI,OADZ,CAPF,CADe,CAAnB,CAJyB,CAiBvB;;;AAGE,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADA,CADJ,eAcQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,KAAKP,UAAL,EADE,CAdR,CADA,CADJ;AAuBH,CA3CD;;AA6CA,eAAeF,KAAf","sourcesContent":["import React from 'react'\n\nconst Tabla = (props) => {\n    // este es un arreglo vacio el cual los usuarios se van a mostrar con los TR que se envian desde la linea 50 a esta \n//En Usuarios No hay nada, es un Arreglo VACIO, asi lo define el reducer\n// el componente aca empieza a llamar el ACTIONCREATOR, esto se realiza desde el DIDMOUNT\nponerFilas = () => this.props.usuarios.map((usuario) => (\n    <tr key={ usuario.id }>\n      <td>\n        { usuario.name }\n      </td>\n      <td>\n        { usuario.email }\n      </td>\n      <td>\n        { usuario.website }\n      </td>\n    </tr>\n  ));\n  //todo lo de ponerFilas se cambia todo esto sucede cuando el payload: respuesta.data se actualiza con la nueva info y la trae de nmuevo\n  \n  \n    return (\n        <div>\n        <table className=\"tabla\">\n            <thead>\n            <tr>\n                <th>\n                Nombre\n                </th>\n                <th>\n                Correo\n                </th>\n                <th>\n                Enlace\n                </th>\n                </tr>\n                </thead>\n                <tbody> \n            { this.ponerFilas() } \n            {/* lo que hace este this.ponerFilas es que por cada usuario entrega una fila o un TR, mirar la linea 14 */}\n            </tbody>\n        </table>\n        </div>\n    )\n}\n\nexport default Tabla\n"]},"metadata":{},"sourceType":"module"}
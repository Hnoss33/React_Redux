{"ast":null,"code":"var _jsxFileName = \"/Users/hydra/Documents/GitHub/blogReact/blog_react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxthunk from 'redux-thunk';\nimport reducers from './reducers'; //despues de tener importado e isntalado redux en el proyecto debemos crear el store \n//El store tiene las siguientes responsabilidades:\n// Contiene el estado de la aplicación\n// Permite el acceso al estado vía getState()\n// Permite que el estado sea actualizado vía dispatch(action)\n// Registra los listeners vía subscribe(listener)\n// Maneja la anuliación del registro de los listeners via el retorno de la función de subscribe(listener)\n\nconst store = createStore( //todo lo que esta adentro de esta constante la APP abajo va a tener acceso a ella, y va a poder manejar todos los estados con el provider de redux \nreducers, //todos los reducers\n{}, //estado inicial\napplyMiddleware(reduxthunk));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}), \",\"), document.getElementById('root'));","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/blogReact/blog_react/src/index.js"],"names":["React","ReactDOM","App","createStore","applyMiddleware","Provider","reduxthunk","reducers","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGL,WAAW,EAAE;AACxBI,QADsB,EACZ;AACX,EAFuB,EAEnB;AACJH,eAAe,CAACE,UAAD,CAHQ,CAAzB;AAMAL,QAAQ,CAACQ,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,MADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore, applyMiddleware} from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxthunk from 'redux-thunk';\nimport reducers from './reducers'\n//despues de tener importado e isntalado redux en el proyecto debemos crear el store \n//El store tiene las siguientes responsabilidades:\n\n// Contiene el estado de la aplicación\n// Permite el acceso al estado vía getState()\n// Permite que el estado sea actualizado vía dispatch(action)\n// Registra los listeners vía subscribe(listener)\n// Maneja la anuliación del registro de los listeners via el retorno de la función de subscribe(listener)\n\nconst store = createStore( //todo lo que esta adentro de esta constante la APP abajo va a tener acceso a ella, y va a poder manejar todos los estados con el provider de redux \n   reducers, //todos los reducers\n  {}, //estado inicial\n  applyMiddleware(reduxthunk)\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />,\n  </Provider>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}